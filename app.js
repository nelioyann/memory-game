document.addEventListener('DOMContentLoaded', () => {
  //card options
  const cardArray = [
    {
      name: 'fries',
      img: 'images/fries.png'
    },
    {
      name: 'cheeseburger',
      img: 'images/cheeseburger.png'
    },
    {
      name: 'ice-cream',
      img: 'images/ice-cream.png'
    },
    {
      name: 'pizza',
      img: 'images/pizza.png'
    },
    {
      name: 'milkshake',
      img: 'images/milkshake.png'
    },
    {
      name: 'hotdog',
      img: 'images/hotdog.png'
    },
    {
      name: 'fries',
      img: 'images/fries.png'
    },
    {
      name: 'cheeseburger',
      img: 'images/cheeseburger.png'
    },
    {
      name: 'ice-cream',
      img: 'images/ice-cream.png'
    },
    {
      name: 'pizza',
      img: 'images/pizza.png'
    },
    {
      name: 'milkshake',
      img: 'images/milkshake.png'
    },
    {
      name: 'hotdog',
      img: 'images/hotdog.png'
    }
  ]

  let emotionArray = [
    {
      emotion: 'joie',
      type: "emotion",
      sensations: ["sourire", "rougir"]

    },
    {
      emotion: 'colère',
      type: "emotion",
      sensations: ["poings fermés", "sourils froncés"]
    },
    {
      emotion: 'joie',
      type: "sensation",
      sensations: ["sourire", "rougir"]

    },
    {
      emotion: 'colère',
      type: "sensation",
      sensations: ["poings fermés", "sourils froncés"]
    },
    {
      emotion: 'peur',
      type: "emotion",
      sensations: ["yeux écarquillés"]

    },
    {
      emotion: 'peur',
      type: "sensation",
      sensations: ["yeux écarquillés"]
    }
  ]
  function randomNumber(min, max) { // min and max included
    return Math.floor(Math.random() * (max - min+1)+min);
  }
  
  // console.log(randomNumber(20, 25));
  cardArray.sort(() => 0.5 - Math.random())
  emotionArray.sort(() => 0.5 - Math.random())
  const grid = document.querySelector('.grid');
  console.log("test")
  const emotionGrid = document.querySelector('.emotionGrid');


  let selectedCard = []
  let selectedCardId = []
  let wonCards = []
  let sensationSvg = `<svg xmlns="http://www.w3.org/2000/svg" id="Layer_1_1_" enable-background="new 0 0 64 64" height="512" viewBox="0 0 64 64" width="512"><circle cx="32" cy="32" fill="#ffb554" r="28"/><path d="m32 38-8 23h-9l8-23v-13l-11 11-5-5 11.65685-11.65685c1.50029-1.50029 3.53513-2.34315 5.65686-2.34315h15.37258c2.12173 0 4.15656.84286 5.65686 2.34315l11.65685 11.65685-5 5-11-11v13l9 23h-9z" fill="#5dc4dd"/><circle cx="32" cy="10" fill="#5dc4dd" r="7"/><path d="m32.85788 24.67432-.85786.81396-.85787-.81396c-.94761-.89912-2.4839-.89907-3.43146 0s-.94761 2.35674 0 3.25586l4.28932 4.06982 4.28932-4.06982c.94756-.89907.94756-2.35679 0-3.25586-.94761-.89912-2.4839-.89907-3.43145 0z" fill="#ea5b58"/><g fill="#1e191a"><path d="m26.72626 16h-2.41278c-2.4043 0-4.66406.93604-6.36328 2.63623l-11.65723 11.65674c-.1875.1875-.29297.44189-.29297.70703s.10547.51953.29297.70703l5 5c.39062.39062 1.02344.39062 1.41406 0l9.29297-9.29297v10.41699l-7.94434 22.84033c-.10645.30566-.05859.64404.12891.9082.18848.26368.49219.42042.81543.42042h9c.42578 0 .80469-.26953.94434-.67139l7.11133-20.44336 8.0127 20.479c.15038.38331.51952.63575.93163.63575h9c.33008 0 .63965-.16309.82617-.43604.18652-.27344.22559-.62061.10547-.92822l-8.93164-22.82422v-10.39746l9.29297 9.29297c.39062.39062 1.02344.39062 1.41406 0l5-5c.1875-.1875.29297-.44189.29297-.70703s-.10547-.51953-.29297-.70703l-11.65723-11.65674c-1.69921-1.70019-3.95898-2.63623-6.36328-2.63623h-2.41278c1.66712-1.46722 2.72626-3.60992 2.72626-6 0-4.41113-3.58887-8-8-8s-8 3.58887-8 8c0 2.39008 1.05914 4.53278 2.72626 6zm12.96026 2c1.87012 0 3.62695.72803 4.94922 2.05029l10.9502 10.94971-3.58594 3.58594-10.29297-10.29297c-.28613-.28613-.71582-.37061-1.08984-.2168-.37403.15479-.61719.51953-.61719.92383v13c0 .12451.02344.24805.06836.36426l8.4668 21.63574h-6.85254l-8.75098-22.36426c-.15039-.38379-.52051-.63574-.93164-.63574-.00586 0-.0127 0-.01953 0-.41797.0083-.78711.27588-.9248.67139l-7.76661 22.32861h-6.88281l7.53809-21.67139c.03711-.10595.05566-.21679.05566-.32861v-13c0-.4043-.24316-.76904-.61719-.92383-.37402-.1543-.80371-.06934-1.08984.2168l-10.29297 10.29297-3.58594-3.58594 10.9502-10.94971c1.32226-1.32226 3.0791-2.05029 4.94922-2.05029zm-7.68652-14c3.30859 0 6 2.69141 6 6s-2.69141 6-6 6-6-2.69141-6-6 2.69141-6 6-6z"/><path d="m31.31152 32.72559c.19336.1831.44043.27441.68848.27441s.49512-.09131.68848-.27441l4.28809-4.06982c.66015-.6255 1.02343-1.46143 1.02343-2.35352s-.36328-1.72803-1.02246-2.35352c-1.3252-1.25586-3.48242-1.25781-4.80762 0-.00098 0-.00098 0-.00098.00049l-.16894.16016-.16992-.16064c-1.32324-1.25684-3.48145-1.25781-4.80664 0-.66016.62548-1.02344 1.46142-1.02344 2.35351s.36328 1.72803 1.02246 2.35352zm-2.91211-7.32569c.2832-.26904.65527-.40332 1.02734-.40332s.74414.13428 1.02734.40283l.85742.81396c.38672.36621.99023.36621 1.37695 0l.85742-.81396c.56641-.53711 1.4873-.53662 2.05566.00049.25686.24414.39846.56446.39846.90235s-.1416.6582-.39941.90234l-3.60059 3.41699-3.60156-3.41699c-.25684-.24414-.39844-.56445-.39844-.90234s.1416-.65821.39941-.90235z"/><path d="m60.62305 36.68506-1.97461-.32129c-.10352.63721-.23145 1.27832-.37988 1.90576l1.94531.46191c.16015-.67382.29785-1.3623.40918-2.04638z"/><path d="m60.99512 32.52734-2-.03418c-.01074.64551-.0459 1.29834-.10352 1.94043l1.99219.17871c.06152-.68994.09961-1.39111.11133-2.08496z"/><path d="m58.96094 30.54688 1.99805-.10645c-.03809-.69727-.09961-1.39697-.18555-2.08008l-1.98438.24902c.08008.63575.1377 1.2876.17188 1.93751z"/><path d="m58.1123 44.62256-1.79883-.87207c-.28027.57715-.58691 1.15527-.91113 1.71826l1.73242.99902c.34864-.60449.67774-1.22509.97754-1.84521z"/><path d="m56.02637 48.2373-1.65625-1.12109c-.35938.53125-.74512 1.05908-1.14746 1.56934l1.57031 1.23828c.43262-.54834.84765-1.11572 1.2334-1.68653z"/><path d="m50.60352 51.56006 1.37891 1.44922c.50098-.47656.99219-.97852 1.46094-1.49219l-1.47852-1.34766c-.43555.47852-.89356.94629-1.36133 1.39063z"/><path d="m58.47852 26.68945 1.96094-.39062c-.13574-.68457-.29883-1.36865-.48242-2.03369l-1.92773.53418c.17089.61767.32225 1.25341.44921 1.89013z"/><path d="m46.11523 6.67041c-.60742-.33936-1.2334-.65967-1.86035-.95215l-.8457 1.8125c.58301.27197 1.16602.56982 1.73145.88574z"/><path d="m49.60449 8.96191c-.54688-.41895-1.12012-.82568-1.70312-1.20898l-1.09766 1.67187c.54297.35645 1.07617.73535 1.58594 1.125z"/><path d="m53.81445 16.09375 1.61523-1.18066c-.41113-.56152-.8457-1.11328-1.29297-1.64062l-1.52539 1.29297c.41602.4912.8213 1.00536 1.20313 1.52831z"/><path d="m52.72949 11.72754c-.48926-.5-.99902-.98438-1.51367-1.43945l-1.32422 1.49902c.47852.42285.95312.87402 1.41016 1.33984z"/><path d="m55.87695 19.38818 1.76758-.93652c-.32617-.61475-.67676-1.22363-1.04395-1.80957l-1.69531 1.06152c.3418.54541.66895 1.11231.97168 1.68457z"/><path d="m57.44238 22.94531 1.88477-.67188c-.2334-.65332-.49316-1.30664-.77344-1.94189l-1.83008.80762c.26075.59033.50293 1.19824.71875 1.80615z"/><path d="m59.65527 40.74512-1.90625-.60254c-.19629.61914-.41504 1.23486-.65234 1.8291l1.85742.74121c.25488-.64014.49121-1.30225.70117-1.96777z"/><path d="m13.38086 51.54639c-.47461-.45312-.93164-.92139-1.35938-1.39209l-1.48047 1.34473c.45996.50586.9502 1.0083 1.45898 1.49365z"/><path d="m6.89355 41.94824c-.23828-.60107-.45801-1.21777-.65137-1.83301l-1.9082.60156c.20898.66064.44434 1.32324.7002 1.96875z"/><path d="m17.22559 9.40674-1.0957-1.67383c-.57617.37695-1.14941.7832-1.70508 1.20605l1.21289 1.59082c.5166-.39453 1.05078-.77246 1.58789-1.12304z"/><path d="m10.7627 48.66748c-.39648-.50342-.78223-1.03125-1.14648-1.56982l-1.65625 1.12012c.39062.57861.80566 1.14648 1.23242 1.68799z"/><path d="m14.13379 11.76416-1.32422-1.49902c-.52344.4624-1.03223.9458-1.51465 1.4375l1.42773 1.40039c.44923-.45752.92383-.90821 1.41114-1.33887z"/><path d="m8.58594 45.44824c-.32031-.55664-.62598-1.13525-.90918-1.72021l-1.80078.87207c.30469.62744.63281 1.24854.97754 1.84619z"/><path d="m20.62207 7.5166-.84375-1.81348c-.63086.29297-1.25684.6123-1.86133.94922l.97266 1.74707c.5625-.31298 1.14551-.60986 1.73242-.88281z"/><path d="m5.21484 28.57568-1.98438-.25195c-.08594.68262-.14941 1.38232-.1875 2.07959l1.99609.10938c.03615-.64991.09474-1.30176.17579-1.93702z"/><path d="m5.98047 24.76514-1.92773-.53418c-.18359.66309-.34668 1.34619-.48535 2.03076l1.96094.39551c.1289-.63819.28026-1.27442.45214-1.89209z"/><path d="m5.10547 34.40088c-.05664-.63867-.09082-1.29248-.10156-1.94336l-2 .03418c.0127.69824.04883 1.39941.10938 2.08496z"/><path d="m9.11328 17.67432-1.69531-1.0625c-.36816.58838-.7207 1.19629-1.04492 1.80762l1.76562.93848c.30274-.56886.63086-1.13526.97461-1.6836z"/><path d="m11.41016 14.54004-1.52344-1.2959c-.4502.52881-.88574 1.08057-1.29492 1.63965l1.61328 1.18164c.38086-.52002.78613-1.0332 1.20508-1.52539z"/><path d="m7.28906 21.10645-1.83008-.80713c-.2832.64307-.54395 1.2959-.77344 1.94043l1.88281.67188c.21388-.59864.45606-1.20606.72071-1.80518z"/><path d="m3.37109 36.6499c.10938.68213.24707 1.37207.4082 2.05078l1.94531-.46094c-.14941-.63184-.27734-1.27344-.37891-1.90723z"/><path d="m30.95117 60.98145.07422-1.99902c-.64355-.02344-1.29688-.0708-1.94043-.14111l-.2168 1.98828c.69141.07519 1.39258.12645 2.08301.15185z"/><path d="m33.04199 60.98096c.69629-.02539 1.39746-.07617 2.08496-.15137l-.21875-1.98828c-.63867.07031-1.29102.11719-1.93848.14062z"/></g></svg>`
  let emotionSvg = `<svg xmlns="http://www.w3.org/2000/svg" id="Capa_1" enable-background="new 0 0 512.945 512.945" height="512" viewBox="0 0 512.945 512.945" width="512"><g><g><g><g id="XMLID_207_"><g><circle cx="256.973" cy="98.813" fill="#ade194" r="90.81"/></g></g><g id="XMLID_208_"><g><circle cx="414.633" cy="257.473" fill="#fef48b" r="90.81"/></g></g><path d="m374.536 257.473c0-41.349 27.643-76.242 65.453-87.217-8.048-2.336-16.555-3.593-25.357-3.593-50.15 0-90.81 40.66-90.81 90.81s40.66 90.81 90.81 90.81c8.801 0 17.308-1.257 25.357-3.593-37.811-10.976-65.453-45.869-65.453-87.217z" fill="#fef056"/><g id="XMLID_210_"><g><circle cx="256.973" cy="414.133" fill="#99e6fc" r="90.81"/></g></g><path d="m214.18 98.813c0-41.838 28.312-77.069 66.811-87.599-7.648-2.092-15.707-3.211-24.019-3.211-50.15 0-90.81 40.66-90.81 90.81s40.66 90.81 90.81 90.81c8.312 0 16.37-1.119 24.019-3.211-38.499-10.53-66.811-45.761-66.811-87.599z" fill="#97da7b"/><path d="m214.18 414.133c0-41.838 28.312-77.07 66.811-87.599-7.648-2.092-15.707-3.211-24.019-3.211-50.15 0-90.81 40.66-90.81 90.81s40.66 90.81 90.81 90.81c8.312 0 16.37-1.119 24.019-3.211-38.499-10.53-66.811-45.761-66.811-87.599z" fill="#62dbfb"/><g id="XMLID_211_"><g><circle cx="98.313" cy="257.473" fill="#fd8087" r="90.81"/></g><g fill="#fe646f"><path d="m58.216 257.473c0-41.349 27.643-76.242 65.453-87.217-8.048-2.336-16.555-3.593-25.356-3.593-50.15 0-90.81 40.66-90.81 90.81s40.66 90.81 90.81 90.81c8.801 0 17.308-1.257 25.356-3.593-37.811-10.976-65.453-45.869-65.453-87.217z"/><path d="m104.231 271.247h-7.57c-14.733 0-26.676 11.943-26.676 26.677v.982c0 3.18 2.578 5.758 5.758 5.758h49.407c3.18 0 5.758-2.578 5.758-5.758v-.982c0-14.734-11.944-26.677-26.677-26.677z"/></g></g></g></g><g><path d="m414.634 159.16c-4.85 0-9.617.359-14.281 1.041-12.304-18.08-28.15-33.909-46.244-46.197.772-4.953 1.175-10.026 1.175-15.192 0-54.209-44.103-98.312-98.312-98.312-32.922 0-63.506 16.369-81.812 43.786-2.3 3.445-1.372 8.103 2.072 10.402 3.445 2.3 8.103 1.372 10.402-2.072 15.519-23.241 41.439-37.116 69.339-37.116 45.938 0 83.312 37.373 83.312 83.312s-37.373 83.312-83.312 83.312-83.312-37.373-83.312-83.312c0-6.461.744-12.901 2.212-19.142.948-4.032-1.552-8.069-5.584-9.018-4.024-.949-8.069 1.551-9.018 5.584-1.732 7.364-2.61 14.96-2.61 22.575 0 5.166.403 10.24 1.175 15.193-18.135 12.317-33.997 28.198-46.313 46.333-4.959-.773-10.039-1.178-15.211-1.178-54.209.001-98.312 44.104-98.312 98.314 0 14.17 2.954 27.852 8.781 40.663 1.714 3.77 6.159 5.438 9.932 3.723 3.771-1.715 5.438-6.161 3.723-9.932-4.934-10.85-7.436-22.442-7.436-34.454 0-45.938 37.373-83.313 83.312-83.313s83.312 37.374 83.312 83.313-37.373 83.312-83.312 83.312c-22.396 0-43.414-8.765-59.182-24.68-2.917-2.944-7.666-2.964-10.606-.05-2.942 2.916-2.965 7.664-.05 10.606 18.607 18.78 43.409 29.123 69.838 29.123 5.166 0 10.239-.403 15.192-1.175 12.26 18.052 28.045 33.871 46.069 46.161-.597 4.371-.912 8.831-.912 13.363 0 54.209 44.103 98.312 98.312 98.312s98.312-44.103 98.312-98.312c0-4.533-.315-8.992-.912-13.364 17.979-12.258 33.735-28.031 45.981-46.026 4.664.682 9.431 1.041 14.281 1.041 27.056 0 53.195-11.326 71.717-31.074 2.833-3.021 2.682-7.768-.34-10.602s-7.769-2.682-10.602.34c-15.928 16.983-37.511 26.336-60.775 26.336-45.938 0-83.312-37.373-83.312-83.312s37.373-83.313 83.312-83.313 83.312 37.374 83.312 83.313c0 11.224-2.192 22.112-6.518 32.363-1.61 3.816.179 8.215 3.995 9.825 3.811 1.606 8.215-.179 9.825-3.995 5.107-12.105 7.697-24.956 7.697-38.193-.001-54.209-44.103-98.312-98.312-98.312zm-157.661 338.285c-45.938 0-83.312-37.373-83.312-83.312s37.373-83.312 83.312-83.312 83.312 37.373 83.312 83.312-37.374 83.312-83.312 83.312zm59.349-239.972c0 43.724 28.695 80.867 68.24 93.602-9.459 12.848-20.901 24.313-33.725 33.797-12.485-39.963-49.842-69.049-93.865-69.049-44.022 0-81.378 29.084-93.864 69.047-12.909-9.55-24.422-21.103-33.917-34.058 39.127-12.978 67.431-49.913 67.431-93.338s-28.302-80.358-67.426-93.338c9.624-13.126 21.313-24.814 34.439-34.439 12.979 39.125 49.913 67.427 93.337 67.427 43.426 0 80.36-28.304 93.338-67.431 13.039 9.561 24.66 21.16 34.245 34.18-39.541 12.736-68.233 49.877-68.233 93.6z"/><path d="m452.453 232.437v-8.801c0-4.143-3.357-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v8.801c0 4.143 3.357 7.5 7.5 7.5s7.5-3.358 7.5-7.5z"/><path d="m391.814 232.437v-8.801c0-4.143-3.357-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v8.801c0 4.143 3.357 7.5 7.5 7.5s7.5-3.358 7.5-7.5z"/><path d="m196.81 110.406c-3.939 1.278-6.097 5.509-4.818 9.449 9.176 28.272 35.29 47.268 64.981 47.268s55.806-18.995 64.981-47.268c1.278-3.94-.879-8.171-4.818-9.449-3.94-1.28-8.17.879-9.449 4.818-7.163 22.07-27.543 36.898-50.714 36.898s-43.551-14.828-50.714-36.898c-1.279-3.94-5.509-6.092-9.449-4.818z"/><path d="m226.653 73.557c4.143 0 7.5-3.357 7.5-7.5v-8.8c0-4.143-3.357-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v8.8c0 4.142 3.358 7.5 7.5 7.5z"/><path d="m294.792 66.057v-8.8c0-4.143-3.357-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v8.8c0 4.143 3.357 7.5 7.5 7.5s7.5-3.358 7.5-7.5z"/><path d="m356.558 289.896c0 4.143 3.357 7.5 7.5 7.5h101.151c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5h-101.151c-4.143 0-7.5 3.357-7.5 7.5z"/><path d="m245.665 373.788c-2.179-3.524-6.802-4.611-10.323-2.437-10.763 6.653-28.321 17.453-31.078 19.015-2.581 1.185-4.374 3.793-4.374 6.819 0 2.72 1.474 5.229 3.85 6.553 1.249.696 2.433.96 3.526.96 2.232 0 4.091-1.097 5.371-1.853.905-.534 5.521-3.327 6.517-3.934v.461c0 4.143 3.357 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-8.801c0-.282-.019-.559-.049-.833 5.144-3.168 9.124-5.628 9.124-5.628 3.523-2.176 4.614-6.798 2.436-10.322z"/><path d="m309.682 390.366c-2.757-1.562-20.315-12.361-31.078-19.015-3.521-2.175-8.145-1.088-10.323 2.437-2.178 3.523-1.087 8.146 2.437 10.323 0 0 3.98 2.46 9.124 5.628-.03.274-.049.551-.049.833v8.801c0 4.143 3.357 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-.461c.995.607 5.611 3.4 6.517 3.934 1.28.756 3.139 1.853 5.371 1.853 1.094 0 2.277-.264 3.526-.96 2.376-1.324 3.85-3.833 3.85-6.553-.001-3.027-1.794-5.635-4.375-6.82z"/><path d="m83.909 228.203c-11.652-6.259-24.772-13.369-27.07-14.723-2.31-1.655-5.464-1.919-8.092-.419-2.369 1.353-3.818 3.886-3.783 6.612.058 4.454 2.454 5.772 8.243 8.96 1.451.798 3.172 1.739 5.009 2.738v9.421c0 4.143 3.357 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-1.309c2.182 1.175 3.596 1.934 3.596 1.934 1.129.606 2.344.894 3.542.894 2.673 0 5.261-1.433 6.614-3.952 1.96-3.649.591-8.196-3.059-10.156z"/><path d="m147.877 213.062c-2.628-1.501-5.782-1.238-8.091.419-2.296 1.352-15.418 8.464-27.071 14.723-3.649 1.96-5.019 6.507-3.059 10.156 1.354 2.52 3.94 3.952 6.614 3.952 1.197 0 2.413-.287 3.542-.894 0 0 1.413-.759 3.595-1.934v1.309c0 4.143 3.357 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-9.42c1.837-1 3.559-1.94 5.01-2.739 5.789-3.188 8.186-4.506 8.243-8.96.035-2.727-1.414-5.26-3.783-6.612z"/><path d="m295.325 449.205c-11.349-7.735-24.611-11.824-38.353-11.824s-27.004 4.089-38.353 11.824c-3.423 2.333-4.307 6.999-1.974 10.421 2.334 3.424 6.999 4.308 10.421 1.974 8.849-6.031 19.189-9.219 29.905-9.219s21.057 3.188 29.905 9.219c1.292.881 2.762 1.304 4.217 1.304 2.397 0 4.753-1.146 6.204-3.277 2.335-3.423 1.451-8.089-1.972-10.422z"/><path d="m96.661 263.747c-18.845 0-34.177 15.332-34.177 34.177v.981c0 7.311 5.947 13.259 13.258 13.259h49.407c7.311 0 13.258-5.948 13.258-13.259v-.981c0-18.845-15.331-34.177-34.176-34.177zm26.732 33.417h-45.894c.4-10.224 8.842-18.417 19.162-18.417h7.57c10.32 0 18.761 8.193 19.162 18.417z"/></g></g></svg>`
  const isThatMatching = () => {
    const cards = document.querySelectorAll('.memory__card');
    const firstPickId = selectedCardId[0];
    const secondPickId = selectedCardId[1];
    if(firstPickId === secondPickId)
    {
      cards[firstPickId].classList.remove("flipped");
      console.log("Same card")
      // cards[firstPickId]
    }else if (selectedCard[0] === selectedCard[1]){
      cards[firstPickId].querySelector("button").setAttribute("disabled", "");
      cards[secondPickId].querySelector("button").setAttribute("disabled", "");
      cards[firstPickId].removeEventListener('click', handleFlip)
      cards[secondPickId].removeEventListener('click', handleFlip)
      console.log("You found a match")
      wonCards.push(selectedCard)
    } else{
      cards[firstPickId].classList.remove("flipped");
      cards[secondPickId].classList.remove("flipped");
      console.log("Wrong pairs")
    }


    selectedCard = []
    selectedCardId = []
    if(wonCards.length === emotionArray.length/2){
      console.log("Well done ! You won")
    }

  }


  const handleFlip = (e) =>{
    let target = e.currentTarget;
    let name = target.getAttribute('data-name');
    let id = target.getAttribute('data-id');
    console.log(id, name)
    console.log(target)
    target.classList.add('flipped');
    selectedCard.push(name);
    selectedCardId.push(id);
    if (selectedCard.length === 2){
      setTimeout(isThatMatching, 300)
      // isThatMatching()


    }
  }
  const makeBoard = () => {
    // console.log("img")
    for (let i = 0; i < emotionArray.length; i++ ){
      let sensationIndex = randomNumber(0, emotionArray[i].sensations.length - 1);
      const card = document.createElement("div");
      // card.setAttribute('src', 'images/blank.png')
      card.setAttribute('data-id', i)
      card.setAttribute('data-name', emotionArray[i].emotion)
      card.addEventListener('click', handleFlip)
      card.classList.add("memory__card");
      card.innerHTML = `
            <button class="card__inner">
              <span class="card__title">${emotionArray[i].type == "emotion" ? emotionSvg : sensationSvg}</span>
              <span class="card__content">${emotionArray[i].type === "sensation" ? emotionArray[i].sensations[sensationIndex] : emotionArray[i].emotion}</span>
            </button>
      `;
      emotionGrid.appendChild(card) ;
    }
  }

 


  makeBoard()
  

  //create your board
  function createBoard() {
    for (let i = 0; i < cardArray.length; i++) {
      const card = document.createElement('img')
      card.setAttribute('src', 'images/blank.png')
      card.setAttribute('data-id', i)
      card.addEventListener('click', flipCard)
      grid.appendChild(card)
    }
  }

  //check for matches
  



  // createBoard()
  // makeBoard()
})
